{%- import '_macros.j2' as macros with context -%}
{{ ansible_managed|comment(decoration='# ') }}

###############################################################################
# SSH Daemon configuration file
###############################################################################

### GENERAL SECTION
{% if ssh_server__pidfile is defined %}
PidFile "{{ ssh_server__pidfile }}"
{% endif %}
Protocol {{ ssh_server__protocol }}
UsePrivilegeSeparation {{ macros.stringOrBool(ssh_server__privilege_separation) }}

## LOGGING
SyslogFacility {{ ssh_server__log_facility }}
LogLevel {{ ssh_server__log_level }}



### NETWORK SECTION
{% for port in ssh_server__ports %}
Port {{ port }}
{% endfor %}
AddressFamily "{{ ssh_server__address_family }}"
{% for address in ssh_server__listen %}
ListenAddress {{ address }}
{% endfor %}

UseDNS {{ macros.bool(ssh_server__use_dns, True) }}
TCPKeepAlive {{ macros.bool(ssh_server__tcp_keepalive) }}

AllowAgentForwarding {{ macros.stringOrBool(ssh_server__allow_agent_forwarding) }}

AllowTcpForwarding {{ macros.stringOrBool(ssh_server__allow_tcp_forwarding) }}
PermitOpen "{{ ssh_server__permit_open if ssh_server__permit_open is string else ssh_server__permit_open|join(' ') }}"
GatewayPorts {{ macros.stringOrBool(ssh_server__gateway_ports) }}

{% if _ssh_server__version is version_compare(6.7, '>=') %}
AllowStreamLocalForwarding {{ macros.stringOrBool(ssh_server__allow_stream_local_forwarding) }}
{% endif %}

PermitTunnel {{ macros.stringOrBool(ssh_server__permit_tunnel) }}
Compression	{{ macros.stringOrBool(ssh_server__compression) }}
{% if ssh_server__ip_qos is string %}
IPQoS {{ ssh_server__ip_qos }}
{% else %}
IPQoS {{ ssh_server__ip_qos[0] }} {{ ssh_server__ip_qos[1] }}
{% endif %}



### Encryption parameters
KexAlgorithms {{ ssh_server__kex_algorithms|join(',') }}
Ciphers {{ ssh_server__ciphers|join(',') }}
MACs {{ ssh_server__macs|join(',') }}

{% if _ssh_server__version is version_compare(7.4, '<') %}
## Protocol 1
ServerKeyBits {{ ssh_server__server_key_bits|int }}
KeyRegenerationInterval {{ ssh_server__key_regeneration_interval|int }}
{% endif %}

{% if ssh_server__host_certificate is defined %}
HostCertificate {{ ssh_server__host_certificate }}
{% endif %}
{% for hostkey in ssh_server__host_keys|d([]) %}
HostKey {{ hostkey }}
{% endfor %}



### AUTHENTIFICATION MODE
{% if ssh_server__authentication_methods is defined %}
AuthenticationMethods {{ ssh_server__authentication_methods }}
{% endif %}

UsePAM {{ macros.bool(ssh_server__use_pam) }}
{% if _ssh_server__version is version_compare(7.4, '<') %}
UseLogin {{ macros.bool(ssh_server__use_login) }}
{% endif %}

## Password authentication
PasswordAuthentication {{ macros.bool(ssh_server__password_authentication) }}
PermitEmptyPasswords {{ macros.bool(ssh_server__permit_empty_passwords) }}

## ChallengeResponse Authentication
ChallengeResponseAuthentication {{ macros.bool(ssh_server__challenge_response_authentication) }}

## Keyboard Interactive authentification
KbdInteractiveAuthentication {{ macros.bool(ssh_server__keyboard_interactive_authentication) }}

## PubKey authentication
PubkeyAuthentication {{ macros.bool(ssh_server__pubkey_authentication) }}
AuthorizedKeysFile {{ ssh_server__authorized_keys if ssh_server__authorized_keys is string else ssh_server__authorized_keys|join(' ') }}
{% if ssh_server__authorized_keys_command is defined and _ssh_server__version is version_compare(6.2, '>=') %}
AuthorizedKeysCommand {{ ssh_server__authorized_keys_command }}
AuthorizedKeysCommandUser {{ ssh_server__authorized_keys_command_user }}
{%   if ssh_server__authorized_principals_file is defined %}
AuthorizedPrincipalsFile "{{ ssh_server__authorized_principals_file }}"
{%   endif %}
{%   if ssh_server__trusted_user_ca_keys is defined %}
TrustedUserCAKeys "{{ ssh_server__trusted_user_ca_keys }}"
{%   endif %}
{%   if ssh_server__revoked_keys is defined %}
RevokedKeys "{{ ssh_server__revoked_keys }}"
{%   endif %}
{%   if ansible_os_family not in ['RedHat'] and _ssh_server__version is version_compare(6.7, '<') %}
PermitBlacklistedKeys {{ macros.bool(ssh_server__permit_blacklisted_keys) }}
{%   endif %}
{% endif %}

{% if _ssh_server__version is version_compare(7.4, '<') %}
## RSAAuthentication
# Protocol 1
RSAAuthentication {{ macros.bool(ssh_server__rsa_authentication) }}
RhostsRSAAuthentication {{ macros.bool(ssh_server__rhosts_rsa_authentication) }}
{% endif %}

## HostbasedAuthentication
# Protocol 2
HostbasedAuthentication {{ macros.bool(ssh_server__host_based_authentication) }}
{% if ssh_server__host_based_authentication|bool %}
HostbasedUsesNameFromPacketOnly {{ macros.bool(ssh_server__host_based_uses_name_from_packet_only) }}
IgnoreUserKnownHosts {{ macros.bool(ssh_server__ignore_user_known_hosts) }}
{% endif %}

IgnoreRhosts {{ macros.bool(ssh_server__ignore_rhosts) }}

## Kerberos authentication
KerberosAuthentication {{ macros.bool(ssh_server__kerberos_authentication) }}
{% if ssh_server__kerberos_authentication|bool %}
KerberosGetAFSToken {{ macros.bool(ssh_server__kerberos_get_afs_token) }}
KerberosOrLocalPasswd {{ macros.bool(ssh_server__kerberos_or_local_passwd) }}
KerberosTicketCleanup {{ macros.bool(ssh_server__kerberos_ticket_cleanup) }}
KerberosUseKuserok {{ macros.bool(ssh_server__kerberos_use_kuserok) }}
{% endif %}

## GSSAPI authentication
GSSAPIAuthentication {{ macros.bool(ssh_server__gssapi_authentication) }}
{% if ssh_server__gssapi_authentication|bool %}
GSSAPIKeyExchange {{ macros.bool(ssh_server__gssapi_key_exchange) }}
GSSAPICleanupCredentials {{ macros.bool(ssh_server__gssapi_cleanup_credentials) }}
GSSAPIStrictAcceptorCheck {{ macros.bool(ssh_server__gssapi_strict_acceptor_check) }}
GSSAPIStoreCredentialsOnRekey {{ macros.bool(ssh_server__gssapi_store_credentials_on_rekey) }}
{%   if _ssh_server__version is version_compare(6.6, '>=') and ansible_distribution not in ['Debian'] %}
GSSAPIEnablek5users {{ macros.bool(ssh_server__gssapi_enable_k5_users) }}
{%   endif %}
{% endif %}



### AUTHORIZATION
## User-based access control
{% if ssh_server__deny_users|d([])|length > 0 %}
DenyUsers {{ ssh_server__deny_users|unique|join(' ') }}
{% endif %}
{% if ssh_server__allow_users|d([])|length > 0 %}
AllowUsers {{ ssh_server__allow_users|unique|join(' ') }}
{% endif %}

## Group-based access control
{% if ssh_server__deny_groups|d([])|length > 0 %}
DenyGroups {{ ssh_server__deny_groups|unique|join(' ') }}
{% endif %}
{% if ssh_server__allow_groups|d([])|length > 0 %}
AllowGroups {{ ssh_server__allow_groups|unique|join(' ') }}
{% endif %}

PermitRootLogin {{ macros.stringOrBool(ssh_server__permit_root_login) }}



### LOGIN
LoginGraceTime {{ ssh_server__login_grace_time }}
MaxAuthTries {{ ssh_server__max_auth_tries|int }}
MaxSessions {{ ssh_server__max_sessions|int }}
MaxStartups {{ ssh_server__max_startups.start~':'~ssh_server__max_startups.rate~':'~ssh_server__max_startups.full if ssh_server__max_startups is mapping else ssh_server__max_startups }}

## User environment
AcceptEnv {{ ssh_server__accept_env|unique|join(' ') }}
PermitUserEnvironment {{ macros.bool(ssh_server__permit_user_environment) }}
{% if _ssh_server__version is version_compare(6.7, '>=') %}
PermitUserRC {{ macros.bool(ssh_server__permit_user_rc) }}
{% endif %}
PermitTTY {{ macros.bool(ssh_server__permit_tty) }}
StrictModes {{ macros.bool(ssh_server__strict_modes) }}

## Greeting
{% if _ssh_server__version is version_compare(6.1, '>=') and ssh_server__version_addendum is defined %}
VersionAddendum {{ ssh_server__version_addendum }}
{% endif %}
Banner {{ ssh_server__banner }}
{% if ansible_os_family == 'Debian' %}
DebianBanner {{ macros.bool(ssh_server__debian_banner) }}
{% endif %}

PrintMotd {{ macros.bool(ssh_server__print_motd) }}
PrintLastLog {{ macros.bool(ssh_server__print_last_log) }}

## SESSION
ChrootDirectory {{ ssh_server__chroot_directory }}
{% if _ssh_server__version is version_compare(4.4, '>=') and ssh_server__force_command is defined %}
ForceCommand {{ ssh_server__force_command }}
{% endif %}

ClientAliveInterval {{ ssh_server__client_alive_interval|int }}
ClientAliveCountMax {{ ssh_server__client_alive_count_max|int }}

# Specifies the maximum amount of data that may be transmitted before the session key is renegotiated
# optionally followed a maximum amount of time that may pass before the session key is renegotiated
# The first argument is specified in bytes and may have a suffix of ‘K’, ‘M’, or ‘G’.
#RekeyLimit default none

## X11 FORWARDING
X11Forwarding {{ macros.bool(ssh_server__x11_forwarding) }}
{% if ssh_server__x11_forwarding|bool %}
X11DisplayOffset {{ ssh_server__x11_display_offset|int }}
X11UseLocalhost {{ macros.bool(ssh_server__x11_use_localhost) }}
{%   if ssh_server__xauth_location is defined %}
XAuthLocation {{ ssh_server__xauth_location }}
{%   endif %}
{% endif %}



### SUBSYSTEMS
{% for name, command in ssh_server__subsystems|dictsort %}
Subsystem {{ name }} {{ command }}
{% endfor %}



### MATCH SECTION
{% for entry in ssh_server__match_list|d([]) if entry.state|d('present') == 'present' %}
Match {{ entry.match }}
{# OPTIONS IS A SIMPLE STRING #}
{%   if entry.options is string %}
{{ entry.options|indent(2, true) }}
{# OPTIONS IS A LIST OF STRING OR DICT #}
{%   else %}
{%     for opt in entry.options %}
{# OPTION IS A DICT #}
{%       if opt is mapping %}
{%         set matched_value = [] %}
{%         for version, value in opt|dictsort %}
{%           if matched_value|length == 0 and _ssh_server__version is version_compare(version, '>=') %}
{%             set _ = matched_value.append(value) %}
{%           endif %}
{%         endfor %}
{%         if matched_value|length == 1 %}
{{           matched_value|join('')|indent(2, true) }}
{%         endif %}
{# OPTION IS A STRING #}
{%       else %}
{{         opt|indent(2, true) }}
{%       endif %}
{%     endfor %}
{%   endif %}
{% endfor %}
