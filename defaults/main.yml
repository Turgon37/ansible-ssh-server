---
# OpenSSH server configuration
# --------------------------------

# the name of the ssh service
sshd__service_name: ssh

# List of ports which ``sshd`` will listen on.
sshd__ports: [ '22' ]

# List of IP addresses on which ``sshd`` should listen for new connections. If
# it's empty, ``sshd`` listens on all interfaces.
sshd__listen: []

# List of SSH host keys that should be enabled, in order of preference.
sshd__host_keys: [ 'ed25519', 'rsa', 'ecdsa' ]

# Path to file which should be displayed before user authentication.
sshd__banner: 'none'

# How much information should be logged by ``sshd`` server.
sshd__log_level: 'INFO'

# With which faciity the SSHD will log
sshd__log_facility: 'AUTH'

# Specify if access to ``root`` account should be granted. By default ``root``
# can be accessed only using SSH public keys.
sshd__permit_root_login: 'no'

# Enable or disable password authentication.
sshd__password_authentication: 'yes'
sshd__keyboardinteractive_authentication: 'no'

# Enable or disable Public Key authentication.
sshd__pubkey_authentication: 'yes'

# Enable or disable Kerberos authentication.
sshd__kerberos_authentication: 'no'

# Enable or disable GSSAPI authentication.
sshd__gssapi_authentication: 'no'

# Enable or disable X11 forwarding by the server.
sshd__x11_forwarding: 'no'

# Maximum number of failed authentication attempts allowed by the server.
sshd__max_auth_tries: '4'

# Maximum number of unauthenticated connections (3), after which there's 80%
# probability of next unauthenticated connection to be dropped, finishing at 7,
# after which all new unauthenticated connections will be refused.
sshd__max_startups: '3:80:7'

# Time after which unauthenticated sessions are disconnected.
sshd__login_grace_time: '20s'

# List of environments variable that the server will accept to load
sshd__accept_env: [ 'LANG', 'LC_*' ]

# Specify if ``sshd`` should use unprivileged processes for incoming session
# authentication. Setting this to ``sandbox`` enables use of additional
# kernel restrictions.
sshd__privilege_separation: 'sandbox'



# Encryption parameters
# -------------------------

# Dict with list of ciphers which should be used by the ``sshd`` server,
# depending on available version, ordered from strongest to weakest. Newer version
# supersedes older version.
sshd__ciphers_map:

  # Source: https://wiki.mozilla.org/Security/Guidelines/OpenSSH
  '6.5': [ 'chacha20-poly1305@openssh.com', 'aes256-gcm@openssh.com',
           'aes128-gcm@openssh.com', 'aes256-ctr', 'aes192-ctr',
           'aes128-ctr' ]

  # Source: https://xivilization.net/~marek/blog/2015/01/12/secure-secure-shell-on-debian-wheezy/
  '6.0': [ 'aes256-ctr', 'aes192-ctr', 'aes128-ctr' ]


# List of additional key exchange algorithms which should be used by the
# ``sshd`` server, depending on available version, depending on available
# version, ordered from stronger to weaker. Newer version supersedes older
# version.
sshd__ciphers_additional: []



# Dict with list of key exchange algorithms which should be used by the
# ``sshd`` server, depending on available version, ordered from strongest to
# oldest. Newer version supersedes older version.
sshd__kex_algorithms_map:

  # Source : https://stribika.github.io/2015/01/04/secure-secure-shell.html
  '6.6': ['curve25519-sha256@libssh.org', 'diffie-hellman-group-exchange-sha256']

  # Source: https://wiki.mozilla.org/Security/Guidelines/OpenSSH
  '6.5': [ 'curve25519-sha256@libssh.org', 'ecdh-sha2-nistp521',
           'ecdh-sha2-nistp384', 'ecdh-sha2-nistp256',
           'diffie-hellman-group-exchange-sha256' ]

  # Source: https://xivilization.net/~marek/blog/2015/01/12/secure-secure-shell-on-debian-wheezy/
  '6.0': [ 'diffie-hellman-group-exchange-sha256' ]



# List of additional key exchange algorithms which should be used by the
# ``sshd`` server, depending on available version, depending on available
# version, ordered from stronger to weaker. Newer version supersedes older
# version.
sshd__kex_algorithms_additional: []



#
# Dict with list of message authentication code algorithms which should be used
# by the ``sshd`` server, depending on available version, ordered from stronger
# to weaker. Newer version supersedes older version.
sshd__macs_map:

  # Source : https://stribika.github.io/2015/01/04/secure-secure-shell.html
  '6.6': ['hmac-sha2-512-etm@openssh.com', 'hmac-sha2-256-etm@openssh.com',
          'hmac-ripemd160-etm@openssh.com', 'umac-128-etm@openssh.com',
          'hmac-sha2-512', 'hmac-sha2-256',
          'hmac-ripemd160', 'umac-128@openssh.com']
  
  # Source: https://wiki.mozilla.org/Security/Guidelines/OpenSSH
  '6.5': [ 'hmac-sha2-512-etm@openssh.com', 'hmac-sha2-256-etm@openssh.com',
           'umac-128-etm@openssh.com', 'hmac-sha2-512', 'hmac-sha2-256',
           'umac-128@openssh.com' ]

  # Source: https://xivilization.net/~marek/blog/2015/01/12/secure-secure-shell-on-debian-wheezy/
  '6.0': [ 'hmac-sha2-512', 'hmac-sha2-256' , 'hmac-ripemd160' ]



#
# List of additional message authentication code algorithms to support
# by the ``sshd`` server, depending on available version, ordered from stronger
# to weaker. Newer version supersedes older version.
sshd__macs_additional: []



#
# Specify minimum size of Diffie-Hellman parameters available to the SSH
# server. Parameters smaller than the given amount will be removed from the
# :file:`/etc/ssh/moduli` file.
sshd__moduli_minimum: '4096'



#
# If set to True, only the first item (which is considered the strongest method
# available) from the lists :envvar:`sshd__ciphers_map`,
# :envvar:`sshd__kex_algorithms_map` and :envvar:`sshd__macs_map` will be configured for
# ``sshd``. Use this with care as it will deny access to anyone not able to use
# the first cryptographic method.
# See https://github.com/debops/ansible-sshd/issues/20
sshd__paranoid: False




# Group-based access control
# ------------------------------


# List of UNIX groups which allow connections to SSH service (global).
sshd__allow_groups: [ 'ssh','sftponly', 'ssh-admins' ]



# Authorized keys management
# ------------------------------

# List of files which contain SSH public keys, to be used to authenticate
# remote users.
sshd__authorized_keys: '{{ sshd__authorized_keys_system +
                           sshd__authorized_keys_user }}'

# List of system-wide files containing SSH public keys. These files are
# expected to be maintained by system administrator and might be used in
# restricted environments (for example SFTPonly accounts).
sshd__authorized_keys_system:
  - '/etc/ssh/authorized_keys/%u'


# List of user files containing SSH public keys. These files are maintained by
# the users themselves.
sshd__authorized_keys_user:
  - '%h/.ssh/authorized_keys'
  - '%h/.ssh/authorized_keys2'

  
# Authorized key lookup configuration
# ---------------------------------------


# Enable support for looking up authorized public keys in external data sources
# (currently LDAP is supported). This function works only with OpenSSH 6.2+.
sshd__authorized_keys_lookup: False

# System user account which will be used to look up authorized keys.
sshd__authorized_keys_lookup_command: 'false'

# System user account which will be used to look up authorized keys.
sshd__authorized_keys_lookup_user: 'nobody'


# Match conditional blocks
# ----------------------------

# List of conditional ``Match`` blocks to include in ``sshd_config``.
# Required parameters:
#
# - ``match``: specify User, Group, or other Match arguments which should
#   activate a given configuration block.
#
# - ``options``: YAML text block which contains :manpage:`sshd_config(5)` options
#   active in a given Match block.
#
sshd__match_list: [ '{{ sshd__match_group_sftponly }}' ]


# Default ``Match`` conditional block which defines configuration for SFTPonly
# accounts.
sshd__match_group_sftponly:
  match: 'Group sftponly'
  options: |
    AuthorizedKeysFile {{ sshd__authorized_keys_system | join(' ') }}
    ChrootDirectory %h
    X11Forwarding no
    AllowAgentForwarding no
    AllowTcpForwarding no
    PermitTunnel no
    ForceCommand internal-sftp
